{"version":3,"sources":["ColorBoxes.js","functions.js","ColorboxesUseRef.js","index.js"],"names":["ColorBoxes","style","squareColor","hex","useState","inputText","setinputText","retrieveColor","e","window","getComputedStyle","target","getPropertyValue","backgroundColor","document","body","rgb","sep","indexOf","r","substr","split","toString","g","b","length","rgbToHex","type","readOnly","id","value","className","onClick","setBgColorFn","ref","callback","current","squareStyle","console","log","ColorboxesUseRef","colorBoxElement1","useRef","colorBoxElement2","colorBoxElement3","colorBoxElement4","setBgColor","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.1e1eab4b.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './ColorBoxes.css';\n\nconst ColorBoxes = () => {\n  //define my variables & functions\n  const [inputText, setinputText] = useState(\"My Hex\")\n  var style;\n  var squareColor;\n  var hex;\n\n  function retrieveColor(e) {\n    style = window.getComputedStyle(e.target)\n    style.getPropertyValue('background-color');\n    squareColor = style.backgroundColor;\n    document.body.style.backgroundColor = squareColor\n    //squareColor = background color of square\n    hex = rgbToHex(squareColor);\n    setinputText(hex);\n  }\n\n  function rgbToHex(rgb) {\n    // Choose correct separator\n    let sep = rgb.indexOf(\",\") > -1 ? \",\" : \" \";\n    // Turn \"rgb(r,g,b)\" into [r,g,b]\n    rgb = rgb.substr(4).split(\")\")[0].split(sep);\n  \n    let r = (+rgb[0]).toString(16),\n        g = (+rgb[1]).toString(16),\n        b = (+rgb[2]).toString(16);\n  \n    if (r.length === 1)\n      r = \"0\" + r;\n    if (g.length === 1)\n      g = \"0\" + g;\n    if (b.length === 1)\n      b = \"0\" + b;\n  \n    return \"#\" + r + g + b;\n  }\n\n  return (\n    <div>\n      <h1>Entropy - the natural course for colors!</h1>\n      <label>My chosen color is: </label>\n      <input type=\"text\" readOnly id=\"chosenColor\" value={ inputText }/>\n      <br></br><br></br>\n      <div className=\"container\">\n            <div className=\"boxitem box1\" onClick={(e) => retrieveColor(e)}>1</div>\n            <div className=\"boxitem box2\" onClick={(e) => retrieveColor(e)}>2</div>\n            <div className=\"boxitem box3\" onClick={(e) => retrieveColor(e)}>3</div>\n            <div className=\"boxitem box4\" onClick={(e) => retrieveColor(e)}>4</div>\n      </div>\n    </div>\n  )\n}\nexport default ColorBoxes;\n","const setBgColor = (ref, callback) => {\n  if (ref.current !== null) {\n    const squareStyle = window.getComputedStyle(ref.current)\n    const squareColor = squareStyle.getPropertyValue('background-color')\n    console.log(squareStyle.getPropertyValue('background-color'));\n    document.body.style.backgroundColor = squareColor\n    const hex = rgbToHex(squareColor);\n    callback(hex);\n    console.log(hex);\n  }\n}\n\nconst setBgColorFn = (ref, callback) => () => {\n  if (ref.current !== null) {\n    const squareStyle = window.getComputedStyle(ref.current)\n    const squareColor = squareStyle.getPropertyValue('background-color')\n    console.log(squareStyle.getPropertyValue('background-color'));\n    document.body.style.backgroundColor = squareColor\n    const hex = rgbToHex(squareColor);\n    callback(hex);\n    console.log(hex);\n  }\n}\n\nfunction rgbToHex(rgb) {\n  // Choose correct separator\n  let sep = rgb.indexOf(\",\") > -1 ? \",\" : \" \";\n  // Turn \"rgb(r,g,b)\" into [r,g,b]\n  rgb = rgb.substr(4).split(\")\")[0].split(sep);\n\n  let r = (+rgb[0]).toString(16),\n      g = (+rgb[1]).toString(16),\n      b = (+rgb[2]).toString(16);\n\n  if (r.length === 1)\n    r = \"0\" + r;\n  if (g.length === 1)\n    g = \"0\" + g;\n  if (b.length === 1)\n    b = \"0\" + b;\n\n  return \"#\" + r + g + b;\n}\n\nexport {\n  setBgColor,\n  setBgColorFn,\n};\n","import React, {useRef,useState} from 'react';\nimport {\n  setBgColor,\n  setBgColorFn,\n} from './functions';\nimport './ColorBoxes.css';\n\nconst ColorboxesUseRef = () => {\n  const [inputText, setinputText] = useState(\"My Hex\")\n  const colorBoxElement1 = useRef(null);\n  const colorBoxElement2 = useRef(null);\n  const colorBoxElement3 = useRef(null);\n  const colorBoxElement4 = useRef(null);\n\n  return (\n    <div>\n      <h1>Entropy - Colorboxes using useRef</h1>\n      <label>My chosen color is: </label>\n      <input type=\"text\" readOnly id=\"chosenColor\" value={ inputText }/>\n      <br></br><br></br>\n      <div className=\"container\">\n            <div\n              className=\"boxitem box1\"\n              ref={colorBoxElement1}\n              onClick={() => setBgColor(colorBoxElement1, setinputText)}\n            />\n            <div\n              className=\"boxitem box2\"\n              ref={colorBoxElement2}\n              onClick={setBgColorFn(colorBoxElement2, setinputText)}\n            />\n            <div \n              className=\"boxitem box3\"\n              ref={colorBoxElement3}\n              onClick={setBgColorFn(colorBoxElement3, setinputText)}\n            />\n            <div\n              className=\"boxitem box4\"\n              ref={colorBoxElement4}\n              onClick={setBgColorFn(colorBoxElement4, setinputText)}\n            />\n      </div>\n    </div>\n  )\n}\nexport default ColorboxesUseRef;\n","import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport ColorBoxes from './ColorBoxes';\nimport ColorboxesUseRef from './ColorboxesUseRef';\n\nconst App = () => {\n  return (\n    <div>\n      <ColorBoxes />\n      <ColorboxesUseRef />\n    </div>\n  );\n};\n\n//Takes the react component and shows it on the screen\nReactDOM.render(<App />,document.querySelector('#root'));\n"],"sourceRoot":""}